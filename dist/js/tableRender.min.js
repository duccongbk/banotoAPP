"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UserTable = exports.CarTable = void 0;
var _allActions = require("./allActions.js");
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == _typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _get() { return _get = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function (e, t, r) { var p = _superPropBase(e, t); if (p) { var n = Object.getOwnPropertyDescriptor(p, t); return n.get ? n.get.call(arguments.length < 3 ? e : r) : n.value; } }, _get.apply(null, arguments); }
function _superPropBase(t, o) { for (; !{}.hasOwnProperty.call(t, o) && null !== (t = _getPrototypeOf(t));); return t; }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var BaseTable = /*#__PURE__*/function () {
  function BaseTable() {
    _classCallCheck(this, BaseTable);
    this._headers = [];
  }
  return _createClass(BaseTable, [{
    key: "headers",
    get:
    // Getter cho thuộc tính headers
    function get() {
      return this._headers;
    },
    set: function set(newHeaders) {
      this._headers = newHeaders;
    }
  }, {
    key: "createDataRow",
    value: function () {
      var _createDataRow = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(entry, index) {
        var row;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              row = document.createElement('tr');
              row.classList.add('data-row'); // Thêm lớp cho hàng dữ liệu

              Object.values(entry).forEach(function (value) {
                var cell = document.createElement('td');
                cell.textContent = value;
                cell.classList.add('data-cell'); // Thêm lớp cho ô dữ liệu
                row.appendChild(cell);
              });
              return _context.abrupt("return", row);
            case 4:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      function createDataRow(_x, _x2) {
        return _createDataRow.apply(this, arguments);
      }
      return createDataRow;
    }()
  }, {
    key: "display",
    value: function () {
      var _display = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(data, currentPage, resultsPerPage, headers) {
        var _this = this;
        var slproducts, tableContainer, table, thead, headerRow, tbody, startIndex, endIndex, paginatedData, i, row, contentContainer, paginationContainer, totalPages, firstButton, prevButton, _loop, _i, nextButton, lastButton;
        return _regeneratorRuntime().wrap(function _callee2$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              // console.log(data.length);
              slproducts = document.getElementById('slproducts');
              slproducts.textContent = "Có : " + data.length + " Results";
              tableContainer = document.getElementById('userTable');
              tableContainer.style.display = 'table';
              tableContainer.innerHTML = '';
              table = document.createElement('table');
              table.classList.add('custom-table');
              thead = document.createElement('thead');
              headerRow = document.createElement('tr');
              headerRow.classList.add('header-row');
              if (headers) {
                headers.forEach(function (headerText) {
                  var th = document.createElement('th');
                  th.textContent = headerText;
                  th.classList.add('header-cell');
                  headerRow.appendChild(th);
                });
              }
              thead.appendChild(headerRow);
              table.appendChild(thead);
              tbody = document.createElement('tbody');
              startIndex = (currentPage - 1) * resultsPerPage;
              endIndex = startIndex + resultsPerPage;
              paginatedData = data.slice(startIndex, endIndex);
              i = 0;
            case 18:
              if (!(i < paginatedData.length)) {
                _context3.next = 26;
                break;
              }
              _context3.next = 21;
              return this.createDataRow(paginatedData[i], i + startIndex, data, currentPage, resultsPerPage);
            case 21:
              row = _context3.sent;
              tbody.appendChild(row);
            case 23:
              i++;
              _context3.next = 18;
              break;
            case 26:
              table.appendChild(tbody);
              tableContainer.appendChild(table);
              contentContainer = document.getElementById('content-all');
              paginationContainer = contentContainer.querySelector('.pagination');
              if (paginationContainer) {
                paginationContainer.innerHTML = '';
              } else {
                paginationContainer = document.createElement('div');
                paginationContainer.classList.add('pagination');
                contentContainer.appendChild(paginationContainer);
              }
              totalPages = Math.ceil(data.length / resultsPerPage);
              if (!(totalPages > 1)) {
                _context3.next = 60;
                break;
              }
              firstButton = document.createElement('button');
              firstButton.textContent = 'First';
              firstButton.classList.add('pagination-button');
              firstButton.addEventListener('click', function () {
                _this.display(data, 1, resultsPerPage, headers);
              });
              paginationContainer.appendChild(firstButton);
              prevButton = document.createElement('button');
              prevButton.textContent = 'Previous';
              prevButton.classList.add('pagination-button');
              prevButton.addEventListener('click', function () {
                if (currentPage > 1) {
                  _this.display(data, currentPage - 1, resultsPerPage, headers);
                }
              });
              paginationContainer.appendChild(prevButton);
              _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop(_i) {
                var pageButton;
                return _regeneratorRuntime().wrap(function _loop$(_context2) {
                  while (1) switch (_context2.prev = _context2.next) {
                    case 0:
                      pageButton = document.createElement('button');
                      pageButton.textContent = _i;
                      pageButton.classList.add('pagination-button');
                      if (_i === currentPage) {
                        pageButton.classList.add('current-page');
                      }
                      pageButton.addEventListener('click', function () {
                        _this.display(data, _i, resultsPerPage, headers);
                      });
                      paginationContainer.appendChild(pageButton);
                    case 6:
                    case "end":
                      return _context2.stop();
                  }
                }, _loop);
              });
              _i = 1;
            case 45:
              if (!(_i <= totalPages)) {
                _context3.next = 50;
                break;
              }
              return _context3.delegateYield(_loop(_i), "t0", 47);
            case 47:
              _i++;
              _context3.next = 45;
              break;
            case 50:
              nextButton = document.createElement('button');
              nextButton.textContent = 'Next';
              nextButton.classList.add('pagination-button');
              nextButton.addEventListener('click', function () {
                if (currentPage < totalPages) {
                  _this.display(data, currentPage + 1, resultsPerPage, headers);
                }
              });
              paginationContainer.appendChild(nextButton);
              lastButton = document.createElement('button');
              lastButton.textContent = 'Last';
              lastButton.classList.add('pagination-button');
              lastButton.addEventListener('click', function () {
                _this.display(data, totalPages, resultsPerPage, headers);
              });
              paginationContainer.appendChild(lastButton);
            case 60:
            case "end":
              return _context3.stop();
          }
        }, _callee2, this);
      }));
      function display(_x3, _x4, _x5, _x6) {
        return _display.apply(this, arguments);
      }
      return display;
    }()
  }, {
    key: "search",
    value: function () {
      var _search = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(data, typename, currentPage, resultsPerPage) {
        var searchData;
        return _regeneratorRuntime().wrap(function _callee3$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              _context4.prev = 0;
              if (!(!data || !data.length)) {
                _context4.next = 4;
                break;
              }
              console.error('Data is undefined or empty.');
              return _context4.abrupt("return");
            case 4:
              // Ghi đè trong các lớp con
              searchData = this.filterData(data, typename);
              _context4.next = 7;
              return this.display(searchData, currentPage, resultsPerPage, this.headers);
            case 7:
              _context4.next = 12;
              break;
            case 9:
              _context4.prev = 9;
              _context4.t0 = _context4["catch"](0);
              console.error('Error:', _context4.t0);
            case 12:
            case "end":
              return _context4.stop();
          }
        }, _callee3, this, [[0, 9]]);
      }));
      function search(_x7, _x8, _x9, _x10) {
        return _search.apply(this, arguments);
      }
      return search;
    }() // Phương thức lọc dữ liệu, sẽ được ghi đè trong các lớp con
  }, {
    key: "filterData",
    value: function filterData(data, typename) {
      return data.filter(function (item) {
        // Mặc định, không thực hiện bất kỳ lọc nào, để ghi đè trong các lớp con
        return true;
      });
    }
  }, {
    key: "fetchData",
    value: function () {
      var _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(url) {
        var response, data;
        return _regeneratorRuntime().wrap(function _callee4$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              _context5.prev = 0;
              _context5.next = 3;
              return fetch(url, {
                method: 'GET',
                headers: {
                  'Content-Type': 'application/x-www-form-urlencoded'
                }
              });
            case 3:
              response = _context5.sent;
              if (response.ok) {
                _context5.next = 6;
                break;
              }
              throw new Error('Network response was not ok');
            case 6:
              _context5.next = 8;
              return response.json();
            case 8:
              data = _context5.sent;
              return _context5.abrupt("return", data);
            case 12:
              _context5.prev = 12;
              _context5.t0 = _context5["catch"](0);
              console.error('Đã xảy ra lỗi:', _context5.t0);
              throw _context5.t0;
            case 16:
            case "end":
              return _context5.stop();
          }
        }, _callee4, null, [[0, 12]]);
      }));
      function fetchData(_x11) {
        return _fetchData.apply(this, arguments);
      }
      return fetchData;
    }()
  }]);
}();
var UserTable = exports.UserTable = /*#__PURE__*/function (_BaseTable) {
  function UserTable() {
    var _this2;
    _classCallCheck(this, UserTable);
    _this2 = _callSuper(this, UserTable);
    _this2.headers = ['STT', 'Tên', 'Số điện thoại', 'Địa chỉ', 'Ngày đăng ký', 'Tùy Chỉnh'];
    return _this2;
  }
  // filterData(data, typename) {
  //     return data.filter(item => {
  //         // Kiểm tra và lọc dữ liệu cho UserTable
  //         return item.arrusers && item.arrusers.ten.toLowerCase().includes(typename.toLowerCase());
  //     });
  // }
  _inherits(UserTable, _BaseTable);
  return _createClass(UserTable, [{
    key: "filterData",
    value: function filterData(data, typename) {
      return data.filter(function (item) {
        // Kiểm tra xem item.arrCars có tồn tại không
        if (item.arrusers) {
          // Duyệt qua tất cả các trường của đối tượng arrCars
          for (var key in item.arrusers) {
            // Kiểm tra nếu giá trị của trường là một chuỗi và chứa từ khóa tìm kiếm
            if (typeof item.arrusers[key] === 'string' && item.arrusers[key].toLowerCase().includes(typename.toLowerCase())) {
              return true; // Trả về true nếu có bất kỳ trường nào thỏa mãn điều kiện
            }
          }
        }
        return false; // Trả về false nếu không có trường nào thỏa mãn điều kiện
      });
    }
  }, {
    key: "createDataRow",
    value: function () {
      var _createDataRow2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(entry, index) {
        var row, dataToDisplay, button, buttonCell;
        return _regeneratorRuntime().wrap(function _callee5$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              row = document.createElement('tr');
              row.classList.add('data-row-user'); // Thêm lớp cho hàng dữ liệu của UserTable
              dataToDisplay = {
                "STT": index + 1,
                "Tên": entry.arrusers.ten,
                "Số điện thoại": entry.arrusers.sdt,
                "Địa chỉ": entry.arrusers.diachi,
                "Ngày đăng ký": new Date(entry.arrusers.created_at).toLocaleDateString() // Chuyển đổi ngày thành chuỗi định dạng ngày/tháng/năm
              };
              Object.values(dataToDisplay).forEach(function (value) {
                var cell = document.createElement('td');
                cell.textContent = value;
                cell.classList.add('data-cell-user'); // Thêm lớp cho ô dữ liệu của UserTable
                row.appendChild(cell);
              });
              button = document.createElement('button');
              button.textContent = 'Action'; // Set the button text
              button.classList.add('action-button'); // Add class for the button

              // Add event listener for the button (if needed)
              button.addEventListener('click', function () {
                console.log("Button clicked for user: ".concat(entry.arrusers.id_user));
                // Add your custom action here
              });

              // Create a cell for the button and append the button to it
              buttonCell = document.createElement('td');
              buttonCell.appendChild(button);
              row.appendChild(buttonCell);
              return _context6.abrupt("return", row);
            case 12:
            case "end":
              return _context6.stop();
          }
        }, _callee5);
      }));
      function createDataRow(_x12, _x13) {
        return _createDataRow2.apply(this, arguments);
      }
      return createDataRow;
    }()
  }, {
    key: "fetchDataAndDisplay",
    value: function () {
      var _fetchDataAndDisplay = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(data, currentPage, resultsPerPage) {
        return _regeneratorRuntime().wrap(function _callee6$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              _context7.prev = 0;
              _context7.next = 3;
              return _get(_getPrototypeOf(UserTable.prototype), "display", this).call(this, data, currentPage, resultsPerPage, this.headers);
            case 3:
              _context7.next = 8;
              break;
            case 5:
              _context7.prev = 5;
              _context7.t0 = _context7["catch"](0);
              console.error('Error:', _context7.t0);
            case 8:
            case "end":
              return _context7.stop();
          }
        }, _callee6, this, [[0, 5]]);
      }));
      function fetchDataAndDisplay(_x14, _x15, _x16) {
        return _fetchDataAndDisplay.apply(this, arguments);
      }
      return fetchDataAndDisplay;
    }()
  }]);
}(BaseTable);
var CarTable = exports.CarTable = /*#__PURE__*/function (_BaseTable2) {
  function CarTable() {
    var _this3;
    _classCallCheck(this, CarTable);
    _this3 = _callSuper(this, CarTable);
    _this3.headers = ['STT', 'Tên', 'Số điện thoại', 'Địa chỉ', 'Tên Xe', 'Hãng Xe', 'Giá Xe', 'Ngày Đăng', 'Trạng Thái'];
    return _this3;
  }
  _inherits(CarTable, _BaseTable2);
  return _createClass(CarTable, [{
    key: "filterData",
    value: function filterData(data, typename) {
      return data.filter(function (item) {
        // Kiểm tra xem item.arrCars có tồn tại không
        if (item.arrCars) {
          // Duyệt qua tất cả các trường của đối tượng arrCars
          for (var key in item.arrCars) {
            // Kiểm tra nếu giá trị của trường là một chuỗi và chứa từ khóa tìm kiếm
            if (typeof item.arrCars[key] === 'string' && item.arrCars[key].toLowerCase().includes(typename.toLowerCase())) {
              return true; // Trả về true nếu có bất kỳ trường nào thỏa mãn điều kiện
            }
          }
        }
        return false; // Trả về false nếu không có trường nào thỏa mãn điều kiện
      });
    }
  }, {
    key: "createDataRow",
    value: function () {
      var _createDataRow3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(entry, index, data, currentPage, resultsPerPage) {
        var _this4 = this;
        var row, dataToDisplay, select, options, selectCell, button, buttonCell;
        return _regeneratorRuntime().wrap(function _callee7$(_context8) {
          while (1) switch (_context8.prev = _context8.next) {
            case 0:
              row = document.createElement('tr');
              row.classList.add('data-row-car'); // Thêm lớp cho hàng dữ liệu của CarTable
              row.addEventListener('click', function () {
                // Bỏ lớp highlighted từ tất cả các hàng
                document.querySelectorAll('.highlighted').forEach(function (row) {
                  row.classList.remove('highlighted');
                });

                // Thêm lớp highlighted vào hàng được click
                row.classList.add('highlighted');
              });
              dataToDisplay = {
                "STT": index + 1,
                "Tên": entry.arrCars.user_ten,
                "Sđt": entry.arrCars.user_sdt,
                "Địa Chỉ": entry.arrCars.user_diachi,
                "Tên Xe": entry.arrCars.carname,
                "Hãng Xe": entry.arrCars.automaker,
                "GIá Xe": entry.arrCars.price,
                "Ngày Đăng": new Date(entry.arrCars.car_created_at).toLocaleDateString()
              };
              Object.entries(dataToDisplay).forEach(function (_ref) {
                var _ref2 = _slicedToArray(_ref, 2),
                  key = _ref2[0],
                  value = _ref2[1];
                var cell = document.createElement('td');
                cell.textContent = value;
                cell.classList.add('data-cell-car'); // Thêm lớp cho ô dữ liệu của CarTable
                cell.addEventListener('click', function () {
                  window.open("/showCarInfo?id_car=".concat(entry.arrCars.id_car.toString()), '_blank');
                  // Hoặc thực hiện hành động khác bạn muốn tại đây
                });
                row.appendChild(cell);
              });

              // Create the <select> element
              select = document.createElement('select');
              select.id = 'activeDropdown';
              select.classList.add('activeDropdown');
              select.addEventListener('change', function () {
                new _allActions.fetchActions().editUserCar(entry.arrCars.id_car.toString(), select.value);
              });

              // Add options to the <select>
              options = [{
                value: 'active',
                text: 'Active',
                color: 'green',
                selected: entry.arrCars.active === 'active'
              }, {
                value: 'inactive',
                text: 'Inactive',
                color: 'red',
                selected: entry.arrCars.active === 'inactive'
              }, {
                value: 'null',
                text: 'Null',
                color: 'red',
                selected: entry.arrCars.active === 'null'
              }, {
                value: 'block',
                text: 'Block',
                color: 'red',
                selected: entry.arrCars.active === 'block'
              }];
              options.forEach(function (optionData) {
                var option = document.createElement('option');
                option.value = optionData.value;
                option.textContent = optionData.text;
                option.style.color = optionData.color;
                if (optionData.selected) {
                  option.selected = true;
                }
                select.appendChild(option);
              });

              // Append the <select> to the row
              selectCell = document.createElement('td');
              selectCell.appendChild(select);
              row.appendChild(selectCell);
              button = document.createElement('button');
              button.textContent = 'Delete'; // Set the button text
              button.classList.add('action-button'); // Add class for the button

              // Add event listener for the button (if needed)
              button.addEventListener('click', function () {
                new _allActions.fetchActions().deleteCar(entry.arrCars.id_car.toString());
                var updatedData = data.filter(function (item) {
                  return item.arrCars.id_car !== entry.arrCars.id_car;
                });
                // Update the display
                _this4.display(updatedData, currentPage, resultsPerPage, _this4.headers);
                // Add your custom action here
              });

              // Create a cell for the button and append the button to it
              buttonCell = document.createElement('td');
              buttonCell.appendChild(button);
              row.appendChild(buttonCell);
              return _context8.abrupt("return", row);
            case 22:
            case "end":
              return _context8.stop();
          }
        }, _callee7);
      }));
      function createDataRow(_x17, _x18, _x19, _x20, _x21) {
        return _createDataRow3.apply(this, arguments);
      }
      return createDataRow;
    }()
  }, {
    key: "fetchDataAndDisplay",
    value: function () {
      var _fetchDataAndDisplay2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(data, currentPage, resultsPerPage) {
        return _regeneratorRuntime().wrap(function _callee8$(_context9) {
          while (1) switch (_context9.prev = _context9.next) {
            case 0:
              _context9.prev = 0;
              _context9.next = 3;
              return _get(_getPrototypeOf(CarTable.prototype), "display", this).call(this, data, currentPage, resultsPerPage, this.headers);
            case 3:
              _context9.next = 8;
              break;
            case 5:
              _context9.prev = 5;
              _context9.t0 = _context9["catch"](0);
              console.error('Error:', _context9.t0);
            case 8:
            case "end":
              return _context9.stop();
          }
        }, _callee8, this, [[0, 5]]);
      }));
      function fetchDataAndDisplay(_x22, _x23, _x24) {
        return _fetchDataAndDisplay2.apply(this, arguments);
      }
      return fetchDataAndDisplay;
    }()
  }]);
}(BaseTable);